@using System.Net.Http.Json
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Forms
@using Ujeby.Blazor.Base
@using Ujeby.Blazor.Base.Components
@using Ujeby.Wordlerererer.App.ViewModels


@inherits ComponentBase<WordleViewModel, IWordleApplicationState, ApplicationSettings>;

<MudContainer Class="d-flex justify-center align-center">

	<MudButtonGroup Variant="Variant.Filled" OverrideStyles="false">
		@if (Valid)
		{
			@foreach (var wChar in ViewModel.Data.Chars)
			{
				<MudButton Color="@GetWordleCharColor(wChar.Type)" Variant="Variant.Filled" @onclick="() => CharClicked(wChar)">
					<MudText Typo="Typo.h5">
						<strong>@wChar.Value.ToString().ToUpper()</strong>
					</MudText>
				</MudButton>
			}
		}
		else
		{
			@foreach (var _char in Word)
			{
				<MudButton Color="MudBlazor.Color.Default" Variant="Variant.Filled">
					<MudText Typo="Typo.h5">
						<strong>@_char.ToString().ToUpper()</strong>
					</MudText>
				</MudButton>
			}
			@for (var i = Word.Length; i < WordleGen.WordleMap.WordLength; i++)
			{
				<MudButton Color="MudBlazor.Color.Default" Disabled="true" Variant="Variant.Filled">
					<MudText Color="MudBlazor.Color.Dark" Typo="Typo.h5">
						<strong>?</strong>
					</MudText>
				</MudButton>
			}
		}
	</MudButtonGroup>

	@if (Valid)
	{
		<MudIconButton style="margin-left:32px;" Variant="Variant.Outlined" Color="Color.Error" Icon="@Icons.Material.Filled.DeleteForever"
				   OnClick="Remove" />
	}

</MudContainer>