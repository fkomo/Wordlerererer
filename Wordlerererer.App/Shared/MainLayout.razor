@using Ujeby.Blazor.Base
@using Ujeby.Blazor.Base.Components

@inherits LayoutComponentBase

@inject IWordleApplicationState AppState
@inject NavigationManager NavManager
@inject ApplicationSettings AppSettings


<PageTitle>@AppState.ApplicationTitle</PageTitle>

<MudThemeProvider @bind-IsDarkMode="@AppState.DarkMode" Theme="Theme" />
<MudDialogProvider />
<MudSnackbarProvider />

<div tabindex="0" @ref="keyPressContainer" @onkeydown="onKeyDown" id="keyPressContainer">
	<MudLayout>
		<MudAppBar Elevation="0">

			<HomeComponent />

			<MudSpacer />

			<MudToggleIconButton @bind-Toggled="@AppState.DarkMode"
								 Icon="@Icons.Material.Filled.DarkMode" ToggledIcon="@Icons.Material.Filled.LightMode" />

			<MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Link="https://github.com/fkomo/Wordlerererer/"
						   Target="_blank" />
		</MudAppBar>

		<MudMainContent>
			<MudContainer MaxWidth="MaxWidth.ExtraExtraLarge" Class="my-8">
				@Body
			</MudContainer>
		</MudMainContent>

	</MudLayout>
</div>

@code {
	private MudTheme Theme = new();

	ElementReference keyPressContainer;
	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		await keyPressContainer.FocusAsync();
	}

	private void onKeyDown(KeyboardEventArgs obj)
	{
		AppState.KeyPress(obj.Key);
	}

	protected async override Task OnInitializedAsync()
	{
		if (!Ujeby.WordleGen.WordGenerator.WordDictionary.Any())
		{
			var httpClient = new HttpClient();

			var dictionary = string.Empty;

			var response = await httpClient.GetAsync($"{ NavManager.BaseUri }content/dictionary");
			if (response.IsSuccessStatusCode)
			{
				if (AppSettings.CompressedDictionary)
				{
					var compressedDictionary = await response.Content.ReadAsByteArrayAsync();
					dictionary = Ujeby.Common.Serialization.Decompress(compressedDictionary);
				}
				else
					dictionary = await response.Content.ReadAsStringAsync();
			}

			Ujeby.WordleGen.WordGenerator.WordDictionary = dictionary.Split('\n', StringSplitOptions.RemoveEmptyEntries)
				.Where(w => w.Length == Ujeby.WordleGen.WordleMap.WordLength).ToArray();
		}

		await Task.CompletedTask;
	}
}